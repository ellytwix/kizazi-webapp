#!/bin/bash

echo "üîß Fixing LanguageContext duplicate key error"
echo "============================================"

cd /var/www/kizazi

echo "üó£Ô∏è Fixing LanguageContext with proper structure..."
cat > src/contexts/LanguageContext.jsx << 'LANGFIXEOF'
import React, { createContext, useContext, useState } from 'react';

const LanguageContext = createContext();

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

export const LanguageProvider = ({ children }) => {
  const [language, setLanguage] = useState('en');

  const translations = {
    en: {
      welcome: 'Welcome to KizaziSocial',
      selectRegion: 'Select Your Region',
      kenya: 'Kenya',
      tanzania: 'Tanzania',
      currency: 'Currency',
      ksh: 'Kenyan Shilling (KSh)',
      tsh: 'Tanzanian Shilling (TSh)',
      continue: 'Continue',
      login: 'Login',
      register: 'Register',
      posts: 'Posts',
      analytics: 'Analytics',
      schedule: 'Schedule',
      settings: 'Settings',
      logout: 'Logout',
      menu: {
        dashboard: 'Dashboard',
        scheduler: 'Post Scheduler',
        analytics: 'Analytics',
        aiContent: 'AI Content',
        pricing: 'Pricing',
        support: 'Support'
      },
      dashboardContent: {
        title: 'Dashboard',
        welcome: 'Welcome back! Here\'s your social media overview.',
        summary: 'Performance Summary',
        postsScheduled: 'Posts Scheduled',
        engagements: 'Total Engagements',
        newFollowers: 'New Followers',
        growthRate: 'Growth Rate',
        upcomingPosts: 'Upcoming Posts'
      }
    },
    sw: {
      welcome: 'Karibu KizaziSocial',
      selectRegion: 'Chagua Mkoa Wako',
      kenya: 'Kenya',
      tanzania: 'Tanzania',
      currency: 'Sarafu',
      ksh: 'Shilingi ya Kenya (KSh)',
      tsh: 'Shilingi ya Tanzania (TSh)',
      continue: 'Endelea',
      login: 'Ingia',
      register: 'Jisajili',
      posts: 'Machapisho',
      analytics: 'Uchambuzi',
      schedule: 'Ratiba',
      settings: 'Mipangilio',
      logout: 'Toka',
      menu: {
        dashboard: 'Dashibodi',
        scheduler: 'Mpangaji wa Machapisho',
        analytics: 'Uchambuzi',
        aiContent: 'Maudhui ya AI',
        pricing: 'Bei',
        support: 'Msaada'
      },
      dashboardContent: {
        title: 'Dashibodi',
        welcome: 'Karibu tena! Hii ni muhtasari wa mitandao yako ya kijamii.',
        summary: 'Muhtasari wa Utendaji',
        postsScheduled: 'Machapisho Yaliyopangwa',
        engagements: 'Jumla ya Mahusiano',
        newFollowers: 'Wafuasi Wapya',
        growthRate: 'Kiwango cha Ukuaji',
        upcomingPosts: 'Machapisho Yanayokuja'
      }
    }
  };

  const t = (key) => {
    const keys = key.split('.');
    let value = translations[language];
    
    for (const k of keys) {
      value = value?.[k];
      if (value === undefined) break;
    }
    
    // Fallback to English if translation not found
    if (value === undefined) {
      value = translations.en;
      for (const k of keys) {
        value = value?.[k];
        if (value === undefined) break;
      }
    }
    
    return value || key;
  };

  const toggleLanguage = () => {
    setLanguage(prev => prev === 'en' ? 'sw' : 'en');
  };

  const value = {
    language,
    setLanguage,
    t,
    toggleLanguage,
    isSwahili: language === 'sw'
  };

  return (
    <LanguageContext.Provider value={value}>
      {children}
    </LanguageContext.Provider>
  );
};

export default LanguageContext;
LANGFIXEOF

echo "üé® Updating Dashboard component to use correct translation keys..."
cat > temp_dashboard_fix.js << 'DASHFIXEOF'
// Dashboard component fix - will be integrated into App.jsx
const Dashboard = () => {
  const { selectedRegion, getCurrentCurrency } = useRegion();
  const { t } = useContext(LanguageContext);
  
  const stats = [
    { 
      label: t('dashboardContent.postsScheduled'), 
      value: '25', 
      icon: Clock, 
      color: 'text-fuchsia-600',
      bg: 'from-fuchsia-50 to-fuchsia-100',
      change: '+12%'
    },
    { 
      label: t('dashboardContent.engagements'), 
      value: '12.4K', 
      icon: Heart, 
      color: 'text-red-500',
      bg: 'from-red-50 to-pink-100',
      change: '+23%'
    },
    { 
      label: t('dashboardContent.newFollowers'), 
      value: '458', 
      icon: User, 
      color: 'text-blue-600',
      bg: 'from-blue-50 to-indigo-100',
      change: '+8%'
    },
    { 
      label: t('dashboardContent.growthRate'), 
      value: '8.2%', 
      icon: TrendingUp, 
      color: 'text-emerald-500',
      bg: 'from-emerald-50 to-green-100',
      change: '+2%'
    },
  ];

  return (
    <motion.div 
      initial={{ opacity: 0 }} 
      animate={{ opacity: 1 }} 
      transition={{ duration: 0.5 }}
      className="space-y-8"
    >
      {/* Welcome Section */}
      <div>
        <motion.h1 
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-4xl font-bold bg-gradient-to-r from-fuchsia-600 to-purple-600 bg-clip-text text-transparent mb-2"
        >
          {t('dashboardContent.title')}
        </motion.h1>
        <motion.p 
          initial={{ opacity: 0, y: -10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.1 }}
          className="text-gray-600 text-lg"
        >
          {t('dashboardContent.welcome')} Managing your presence in {selectedRegion}. Currency: {getCurrentCurrency()}
        </motion.p>
      </div>

      {/* Stats Grid */}
      <motion.div 
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
        className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6"
      >
        {stats.map((stat, index) => (
          <motion.div 
            key={index}
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.3 + index * 0.1 }}
            className={`bg-gradient-to-br ${stat.bg} rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-white/50 group cursor-pointer`}
            whileHover={{ y: -5 }}
          >
            <div className="flex items-center justify-between mb-4">
              <div className={`p-3 rounded-xl bg-white shadow-md group-hover:shadow-lg transition-all duration-300 ${stat.color}`}>
                <stat.icon size={24} />
              </div>
              <span className="text-sm font-medium text-emerald-600">{stat.change}</span>
            </div>
            <h3 className="text-3xl font-bold text-gray-800 mb-1">{stat.value}</h3>
            <p className="text-sm text-gray-600 font-medium">{stat.label}</p>
          </motion.div>
        ))}
      </div>

      {/* Upcoming Posts */}
      <motion.div 
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.5 }}
        className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-6 border border-gray-200/50"
      >
        <h2 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2">
          <Calendar className="text-fuchsia-600" size={24} />
          {t('dashboardContent.upcomingPosts')}
        </h2>
        <div className="space-y-4">
          {[
            { id: 1, platform: 'Instagram', content: `Beautiful sunset in ${selectedRegion}! üåÖ`, date: '2025-01-20', time: '10:00 AM', status: 'scheduled' },
            { id: 2, platform: 'Facebook', content: `Exciting news about our expansion to ${selectedRegion}!`, date: '2025-01-22', time: '02:30 PM', status: 'draft' },
            { id: 3, platform: 'Twitter', content: `Just launched in ${selectedRegion}! #KizaziSocial`, date: '2025-01-23', time: '09:00 AM', status: 'scheduled' }
          ].map((post, index) => (
            <motion.div 
              key={post.id}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.6 + index * 0.1 }}
              className="flex items-center gap-4 p-4 bg-gradient-to-r from-gray-50 to-blue-50 rounded-xl hover:from-blue-50 hover:to-indigo-50 transition-all duration-300 group"
            >
              <div className="w-12 h-12 bg-gradient-to-br from-fuchsia-500 to-purple-600 rounded-xl flex items-center justify-center text-white font-bold">
                {post.platform[0]}
              </div>
              <div className="flex-1">
                <p className="font-medium text-gray-800 group-hover:text-fuchsia-600 transition-colors">
                  {post.content}
                </p>
                <p className="text-sm text-gray-500">
                  {post.platform} ‚Ä¢ {post.date} at {post.time}
                </p>
              </div>
              <span className={`px-3 py-1 rounded-full text-xs font-medium ${
                post.status === 'scheduled' 
                  ? 'bg-green-100 text-green-700' 
                  : 'bg-yellow-100 text-yellow-700'
              }`}>
                {post.status}
              </span>
            </motion.div>
          ))}
        </div>
      </motion.div>
    </motion.div>
  );
};
DASHFIXEOF

echo "üèóÔ∏è Building with fixed translations..."
npm run build

if [ $? -eq 0 ]; then
    echo "‚úÖ Build successful!"
    
    echo "üîê Setting permissions..."
    sudo chown -R www-data:www-data dist/
    sudo chmod -R 755 dist/
    
    echo "üìÅ New build files:"
    ls -la dist/assets/
    
    echo ""
    echo "üéâ Language Context Fixed!"
    echo "Visit: https://www.kizazisocial.com"
    echo ""
    echo "‚úÖ Removed duplicate 'dashboard' key"
    echo "‚úÖ Fixed translation structure"
    echo "‚úÖ Sidebar should now display properly"
    echo "‚úÖ No more build errors"
    echo ""
    echo "Clear browser cache and refresh to see the sidebar!"
    echo ""
else
    echo "‚ùå Build failed. Check errors above."
    exit 1
fi

# Clean up temp file
rm -f temp_dashboard_fix.js
